limit_req_zone $binary_remote_addr zone=default:10m rate=50r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/s;

upstream unicorn_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen *:80;
  return 301 https://$host$request_uri;
}

<% if @application[:ssl_support] %>
server {
  listen *:443 ssl;

  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;

  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>-ssl.access.log;
  error_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>-ssl.error.log;

  ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
  <% if @application[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
  <% end -%>

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  keepalive_timeout 5;

  limit_req zone=default burst=20 nodelay;
  limit_req_status 429;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>
  gzip                      on;
  gzip_http_version         1.0;
  gzip_disable              "msie6";
  gzip_vary                 on;
  gzip_min_length           1100;
  gzip_buffers              64 8k;
  gzip_comp_level           3;
  gzip_proxied              any;
  gzip_types                text/plain text/css application/x-javascript text/xml application/xml;

  location ~ ^/(assets)/ {
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
  }

  location / {
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }

    # serve correct CORS header for font assets
    location ~* \.(eot|svg|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
    }

    # rate limiting to prevent brute forcing certain urls - burst is 2 for the double clickers!
    location ~ /(login|password|nomination/.*)$ {
      limit_req zone=auth burst=2 nodelay;
      proxy_pass http://unicorn_portfoliobuilder;
    }

  }

  location ~ ^/ae(.*)$ {
    return 301 https://$host;
  }

  location ~ (\.php|.aspx|.asp|myadmin) {
    return 404;
  }

  # HTTP444 - Connection Closed Without Response
  # used to drop connection without response for malicious actors

  #invalid URI
  location ~ ^/SkyNet(.*)$ {
    return 444;
  }

  #disrespectful bots
  if ($http_user_agent ~* (mj12bot|semrush) ) {
      return 444;
  }

  error_page 429 /429.html;
  error_page 500 502 503 504 /500.html;

  location ~ ^/(429|500).html$ {
    root <%= @application[:absolute_document_root] %>;
  }

}
<% end %>
